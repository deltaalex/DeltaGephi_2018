package org.gephi.ui.statistics.plugin.social;

import org.gephi.lib.validation.BetweenZeroAndOneValidator;
import org.gephi.lib.validation.PositiveNumberValidator;
import org.netbeans.validation.api.builtin.Validators;
import org.netbeans.validation.api.ui.ValidationGroup;
import org.netbeans.validation.api.ui.ValidationPanel;

/**
 *
 * @author Alexandru Topirceanu
 */
public class EvolvingWeightsPanel extends javax.swing.JPanel {

    public EvolvingWeightsPanel() {
        initComponents();
    }

    public static ValidationPanel createValidationPanel(EvolvingWeightsPanel innerPanel) {
        ValidationPanel validationPanel = new ValidationPanel();
        if (innerPanel == null) {
            innerPanel = new EvolvingWeightsPanel();
        }
        validationPanel.setInnerComponent(innerPanel);

        ValidationGroup group = validationPanel.getValidationGroup();

        // graph parameters
        group.add(innerPanel.iterationsField, Validators.REQUIRE_NON_EMPTY_STRING, new PositiveNumberValidator());
        group.add(innerPanel.pollField, Validators.REQUIRE_NON_EMPTY_STRING, new PositiveNumberValidator());
        group.add(innerPanel.timeoutField, Validators.REQUIRE_NON_EMPTY_STRING, new PositiveNumberValidator());
        group.add(innerPanel.alphaField, Validators.REQUIRE_NON_EMPTY_STRING, new BetweenZeroAndOneValidator());
        group.add(innerPanel.betaField, Validators.REQUIRE_NON_EMPTY_STRING, new BetweenZeroAndOneValidator());

        return validationPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        header = new org.jdesktop.swingx.JXHeader();
        labelRandomize4 = new javax.swing.JLabel();
        lIterations = new javax.swing.JLabel();
        iterationsField = new javax.swing.JTextField();
        lSolutionSize3 = new javax.swing.JLabel();
        lPoll = new javax.swing.JLabel();
        pollField = new javax.swing.JTextField();
        lSolutionSize4 = new javax.swing.JLabel();
        lAlpha = new javax.swing.JLabel();
        alphaField = new javax.swing.JTextField();
        lSolutionSize5 = new javax.swing.JLabel();
        lBeta = new javax.swing.JLabel();
        betaField = new javax.swing.JTextField();
        lSolutionSize6 = new javax.swing.JLabel();
        lTimeout = new javax.swing.JLabel();
        timeoutField = new javax.swing.JTextField();
        lSolutionSize7 = new javax.swing.JLabel();

        setForeground(new java.awt.Color(51, 51, 255));

        header.setDescription(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.header.description")); // NOI18N
        header.setTitle(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.header.title")); // NOI18N

        labelRandomize4.setFont(labelRandomize4.getFont().deriveFont(labelRandomize4.getFont().getSize()-1f));
        labelRandomize4.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.labelRandomize4.text")); // NOI18N
        labelRandomize4.setForeground(new java.awt.Color(102, 102, 102));

        lIterations.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lIterations.text")); // NOI18N

        iterationsField.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.iterationsField.text")); // NOI18N
        iterationsField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                iterationsFieldKeyReleased(evt);
            }
        });

        lSolutionSize3.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize3.text")); // NOI18N
        lSolutionSize3.setToolTipText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize3.toolTipText")); // NOI18N
        lSolutionSize3.setForeground(new java.awt.Color(102, 102, 102));

        lPoll.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lPoll.text")); // NOI18N

        pollField.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.pollField.text")); // NOI18N
        pollField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pollFieldKeyReleased(evt);
            }
        });

        lSolutionSize4.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize4.text")); // NOI18N
        lSolutionSize4.setToolTipText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize4.toolTipText")); // NOI18N
        lSolutionSize4.setForeground(new java.awt.Color(102, 102, 102));

        lAlpha.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lAlpha.text")); // NOI18N

        alphaField.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.alphaField.text")); // NOI18N
        alphaField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                alphaFieldKeyReleased(evt);
            }
        });

        lSolutionSize5.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize5.text")); // NOI18N
        lSolutionSize5.setToolTipText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize5.toolTipText")); // NOI18N
        lSolutionSize5.setForeground(new java.awt.Color(102, 102, 102));

        lBeta.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lBeta.text")); // NOI18N

        betaField.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.betaField.text")); // NOI18N
        betaField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                betaFieldKeyReleased(evt);
            }
        });

        lSolutionSize6.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize6.text")); // NOI18N
        lSolutionSize6.setToolTipText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize6.toolTipText")); // NOI18N
        lSolutionSize6.setForeground(new java.awt.Color(102, 102, 102));

        lTimeout.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lTimeout.text")); // NOI18N

        timeoutField.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.timeoutField.text")); // NOI18N
        timeoutField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timeoutFieldKeyReleased(evt);
            }
        });

        lSolutionSize7.setText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize7.text")); // NOI18N
        lSolutionSize7.setToolTipText(org.openide.util.NbBundle.getMessage(EvolvingWeightsPanel.class, "EvolvingWeightsPanel.lSolutionSize7.toolTipText")); // NOI18N
        lSolutionSize7.setForeground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(labelRandomize4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lIterations)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(iterationsField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lSolutionSize3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lPoll)
                            .addComponent(lAlpha)
                            .addComponent(lBeta))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(betaField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lSolutionSize6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(alphaField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lSolutionSize5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(pollField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lSolutionSize4))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lTimeout)
                        .addGap(18, 18, 18)
                        .addComponent(timeoutField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lSolutionSize7)))
                .addGap(0, 38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelRandomize4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lIterations)
                    .addComponent(iterationsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSolutionSize3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lPoll)
                    .addComponent(pollField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSolutionSize4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lTimeout)
                    .addComponent(timeoutField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSolutionSize7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAlpha)
                    .addComponent(alphaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSolutionSize5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lBeta)
                    .addComponent(betaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lSolutionSize6))
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void iterationsFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iterationsFieldKeyReleased
    }//GEN-LAST:event_iterationsFieldKeyReleased

    private void pollFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pollFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_pollFieldKeyReleased

    private void alphaFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_alphaFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_alphaFieldKeyReleased

    private void betaFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_betaFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_betaFieldKeyReleased

    private void timeoutFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeoutFieldKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_timeoutFieldKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JTextField alphaField;
    protected javax.swing.JTextField betaField;
    private org.jdesktop.swingx.JXHeader header;
    protected javax.swing.JTextField iterationsField;
    private javax.swing.JLabel lAlpha;
    private javax.swing.JLabel lBeta;
    private javax.swing.JLabel lIterations;
    private javax.swing.JLabel lPoll;
    protected javax.swing.JLabel lSolutionSize3;
    protected javax.swing.JLabel lSolutionSize4;
    protected javax.swing.JLabel lSolutionSize5;
    protected javax.swing.JLabel lSolutionSize6;
    protected javax.swing.JLabel lSolutionSize7;
    private javax.swing.JLabel lTimeout;
    private javax.swing.JLabel labelRandomize4;
    protected javax.swing.JTextField pollField;
    protected javax.swing.JTextField timeoutField;
    // End of variables declaration//GEN-END:variables
}
